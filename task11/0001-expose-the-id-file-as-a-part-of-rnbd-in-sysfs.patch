From 0fe05e3d6fc5b5c44bb238a781bea2b79c77dcae Mon Sep 17 00:00:00 2001
From: Gautam Menghani <gautammenghani201@gmail.com>
Date: Wed, 21 Sep 2022 00:10:02 +0530
Subject: [PATCH] expose the id file as a part of rnbd in sysfs
To: axboe@kernel.dk
Cc: linux-block@vger.kernel.org,
    linux-kernel@vger.kernel.org

Expose the id file as a part of the rnbd device in sysfs.

Signed-off-by: Gautam Menghani <gautammenghani201@gmail.com>
---
 block/genhd.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/block/genhd.c b/block/genhd.c
index d36fabf0abc1..3b3debccee5b 100644
--- a/block/genhd.c
+++ b/block/genhd.c
@@ -33,6 +33,7 @@
 #include "blk-cgroup.h"
 
 static struct kobject *block_depr;
+char *myid= "testId";
 
 /*
  * Unique, monotonically increasing sequential number associated with block
@@ -1068,6 +1069,27 @@ static struct device_attribute dev_attr_fail_timeout =
 	__ATTR(io-timeout-fail, 0644, part_timeout_show, part_timeout_store);
 #endif
 
+//ID - read and write
+static ssize_t id_show(struct kobject *kobj, struct kobj_attribute *attr,
+                           char *buf)
+{
+        strncpy(buf, myid, strlen(myid));
+        return strlen(myid);
+}
+
+static ssize_t id_store(struct kobject *kobj, struct kobj_attribute *attr,
+                            const char *buf, size_t len)
+{
+        char buffer[10];
+        sscanf(buf, "%s", buffer);
+        pr_debug("got data: %s, %ld\n", buf, strlen(buf));
+        if (len-1 == strlen(myid) && !strncmp(buffer, myid, strlen(myid))) 
+                return len;     
+        return -EINVAL;
+}
+
+static struct kobj_attribute id_attribute = __ATTR(id, 0664, id_show, id_store);
+
 static struct attribute *disk_attrs[] = {
 	&dev_attr_range.attr,
 	&dev_attr_ext_range.attr,
@@ -1084,6 +1106,7 @@ static struct attribute *disk_attrs[] = {
 	&dev_attr_events.attr,
 	&dev_attr_events_async.attr,
 	&dev_attr_events_poll_msecs.attr,
+	&id_attribute.attr,
 	&dev_attr_diskseq.attr,
 #ifdef CONFIG_FAIL_MAKE_REQUEST
 	&dev_attr_fail.attr,
-- 
2.34.1

